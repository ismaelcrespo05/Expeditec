# Generated by Django 5.2 on 2025-05-24 15:38

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Aspirante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('Profesor', 'Profesor'), ('Estudiante', 'Estudiante')], max_length=10, verbose_name='Tipo de aspirante')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres')),
                ('primer_apellido', models.CharField(max_length=100, verbose_name='Primer apellido')),
                ('segundo_apellido', models.CharField(blank=True, max_length=100, null=True, verbose_name='Segundo apellido')),
                ('sexo', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino')], max_length=10, verbose_name='Sexo')),
                ('ci', models.CharField(max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='El CI debe tener exactamente 11 dígitos numéricos', regex='^\\d{11}$')], verbose_name='Carné de identidad')),
                ('lugar_nacimiento', models.CharField(max_length=100, verbose_name='Lugar de nacimiento')),
                ('color_piel', models.CharField(choices=[('Blanca', 'Blanca'), ('Negra', 'Negra')], max_length=10, verbose_name='Color de piel')),
                ('estado_civil', models.CharField(choices=[('Soltero/a', 'Soltero/a'), ('Casado/a', 'Casado/a'), ('Divorciado/a', 'Divorciado/a'), ('Viudo/a', 'Viudo/a')], max_length=12, verbose_name='Estado civil')),
                ('ciudadano', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y espacios', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')], verbose_name='Ciudadano')),
                ('procedencia_social', models.CharField(choices=[('Obrera', 'Obrera'), ('Campesina', 'Campesina')], max_length=15, verbose_name='Procedencia social')),
                ('especialidad', models.CharField(max_length=100, verbose_name='Especialidad')),
                ('pais', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message='Solo se permiten letras y espacios', regex='^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$')], verbose_name='País')),
                ('centro', models.CharField(max_length=100, verbose_name='Centro de trabajo/estudio')),
                ('cargo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cargo')),
                ('facultad', models.CharField(blank=True, choices=[('Facultad de Ciberseguridad', 'Facultad de Ciberseguridad'), ('Facultad de Informática Organizacional', 'Facultad de Informática Organizacional'), ('Facultad de Tecnologías Interactivas', 'Facultad de Tecnologías Interactivas'), ('Facultad de Ciencias y Tecnologías Computacionales', 'Facultad de Ciencias y Tecnologías Computacionales'), ('Facultad de Tecnologías Educativas', 'Facultad de Tecnologías Educativas'), ('Facultad de Tecnologías Libres', 'Facultad de Tecnologías Libres')], max_length=50, null=True, verbose_name='Facultad')),
                ('ces', models.CharField(blank=True, max_length=100, null=True, verbose_name='CES')),
                ('departamento', models.CharField(blank=True, choices=[('Departamento de Infraestructura Tecnológica', 'Departamento de Infraestructura Tecnológica'), ('Departamento de Ciberseguridad', 'Departamento de Ciberseguridad'), ('Departamento de Física', 'Departamento de Física'), ('Departamento de Informática', 'Departamento de Informática'), ('Departamento de Gestión Organizacional', 'Departamento de Gestión Organizacional'), ('Departamento de Inteligencia Computacional', 'Departamento de Inteligencia Computacional'), ('Departamento de Bioinformática', 'Departamento de Bioinformática'), ('Centro de Idiomas', 'Centro de Idiomas'), ('Departamento de Marxismo Leninismo e Historia', 'Departamento de Marxismo Leninismo e Historia'), ('Departamento de Enseñanza Militar', 'Departamento de Enseñanza Militar')], max_length=50, null=True, verbose_name='Departamento')),
                ('salario', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(999999.99)], verbose_name='Salario')),
                ('categoria_docente', models.CharField(blank=True, choices=[('ATD Medio Superior', 'ATD Medio Superior'), ('ATD Superior', 'ATD Superior'), ('Instructor', 'Instructor'), ('Profesor Asistente', 'Profesor Asistente'), ('Profesor Auxiliar', 'Profesor Auxiliar'), ('Profesor Titular', 'Profesor Titular')], max_length=30, null=True, verbose_name='Categoría docente')),
                ('fecha_otorgamiento_categoria', models.DateField(blank=True, null=True, verbose_name='Fecha de otorgamiento de categoría')),
                ('direccion', models.TextField(max_length=500, verbose_name='Dirección particular')),
                ('grado_cientifico', models.CharField(blank=True, choices=[('Máster', 'Máster'), ('Doctor', 'Doctor')], max_length=10, null=True, verbose_name='Grado científico')),
                ('fecha_otorgamiento_grado', models.DateField(blank=True, null=True, verbose_name='Fecha de otorgamiento de grado científico')),
                ('telefono', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message='Formato de teléfono inválido. Use +5371234567 o 51234567', regex='^(\\+53)?[1-8]\\d{6,7}$|^(\\+53)?5\\d{7}$')], verbose_name='Teléfono')),
                ('solapin', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Solo caracteres alfanuméricos', regex='^[a-zA-Z0-9]+$')], verbose_name='Solapín')),
                ('userid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Aspirante',
                'verbose_name_plural': 'Aspirantes',
                'ordering': ['nombres', 'primer_apellido'],
            },
        ),
        migrations.CreateModel(
            name='RRHH',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userid', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
